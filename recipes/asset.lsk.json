{
  "symbol":"lsk",
  "name":"Lisk",
  "info":"<p>Lisk (LSK) is a blockchain application platform, established in early 2016 by Max Kordek and Oliver Beddows. Based on its own Blockchain network and token LSK, Lisk will enable developers to create, distribute and manage decentralized Blockchain applications by deploying their own sidechain linked to the Lisk network, including a custom token. Thanks to the flexibility of sidechains, developers can implement and customize their Blockchain applications entirely. <a href=\"https://en.bitcoinwiki.org/wiki/Lisk\">https://en.bitcoinwiki.org/wiki/Lisk</a></p>",
  "module":"quartz",
  "mode":"lisk.lisk",
  "addressRegex":"^\\d{19,20}L$",
  "factor":8,
  "fee":0.1,
  "fee-symbol":"lsk",
  "contract":null,
  "host":["https://hub21.lisk.io","https://hub22.lisk.io","https://hub23.lisk.io","https://hub24.lisk.io","https://hub25.lisk.io","https://hub26.lisk.io","https://hub27.lisk.io","https://hub28.lisk.io","https://hub31.lisk.io","https://hub32.lisk.io","https://hub33.lisk.io","https://hub34.lisk.io","https://hub35.lisk.io","https://hub36.lisk.io","https://hub37.lisk.io","https://hub38.lisk.io"],
  "cache":15000,
  "throttle":5,
  "genesisBlockTime":1464116400,
  "quartz":{
    "balance" : [
      "curl /api/accounts?address=$1&limit=1&offset=0&sort=balance:asc {Accept:'application/json','Content-Type':'application/json'} 2 1",
      "fail 'Error from $symbol host : $'",
      "tran '.data[0].balance' @nonzero",
      "data 0",
      "jump @done",
      "@nonzero",
      "atom",
      "@done"
    ],
    "push" : [
      "data '$1'",
      "curl /api/transactions POST {Accept:'application/json','Content-Type':'application/json', Accept: 'application/json'} 2 1",
      "fail 'Error from $symbol host : $'",
      "done"
    ],
    "history" : [
      "poke count $2 12",
      "poke offset $3 0",
      "curl /api/transactions?recipientId=$1&offset=$offset&limit=$count GET {Accept:'application/json'} 2 1",
      "fail 'Error from $symbol host : $'",
      "tran .data 2 1",
      "fail 'Cannot get transaction history!'",
      "sort ['.height',num,desc]",
      "tran '[].id'",
      "done"
    ],
    "reformatTx": [
      "tran .value 2 1",
      "fail 'failed tran'",
      "with reformatTimestamp [data,${.timestamp}] [math,'+$genesisBlockTime']",
      "with reformatFee [data,'${.fee}'] [atom]",
      "with reformatAmount [data,'${.amount}'] [atom]",
      "tran { id:'.id', timestamp:'$reformatTimestamp', amount:'$reformatAmount', symbol:'$symbol', fee:'$reformatFee', 'fee-symbol':'${fee-symbol}', source:'.senderId', target:'.recipientId', confirmed:'.confirmations' } 2 1",
      "fail 'failed tran'",
      "done"
    ],
    "transactionData" : [
      "curl /api/transactions?id=$1&limit=1&offset=0 {Accept:'application/json'} 2 1",
      "fail 'Error from $symbol host : $'",
      "tran .data 2 1",
      "fail 'Cannot get transaction data!'",
      "pick"
    ],
    "transaction" : [
      "call transactionData/$1",
      "with reformatTimestamp [data,${.timestamp}] [math,'+$genesisBlockTime']",
      "with reformatFee [data,'${.fee}'] [atom]",
      "with reformatAmount [data,'${.amount}'] [atom]",
      "tran { id:'.id', timestamp:'$reformatTimestamp', amount:'$reformatAmount', symbol:'$symbol', fee:'$reformatFee', 'fee-symbol':'${fee-symbol}', source:'.senderId', target:'.recipientId', confirmed:'.confirmations' } 1 @fail",
      "done",
      "fail 'Cannot get transaction data!'"
    ],
    "attachment" : [
      "call transactionData/$1",
      "tran .asset 2 1",
      "data null",
      "done"
    ],
    "message" : [
      "call attachment/$1",
      "tran .data 2 1",
      "done ''",
      "done"
    ],
    "sample" : [
      "done {address:'5920921428156130553L',transaction:'7756785777154630495'}"
    ],
    "test":[
      "done {hash:dynamic,time:1556105965842}"
    ]
  }
}
