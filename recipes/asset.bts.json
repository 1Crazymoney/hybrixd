{
  "symbol":"bts",
  "name":"BitShares",
  "module":"quartz",
  "mode":"bitshares.main",
  "factor":4,
  "fee":0.05,
  "contract":"1.3.0",
  "host":"wss://api.bts.blckchnd.com",
  "host-alts":["wss://bitshares.nu/ws","wss://dex.rnglab.org","wss://api.bts.blckchnd.com","wss://bitshares.crypto.fans/ws","wss://eu.openledger.info/ws","wss://dexnode.net/ws","wss://bitshares-api.wancloud.io/ws","wss://japan.bitshares.apasia.tech/ws","wss://openledger.hk/ws","wss://bit.btsabc.org/ws","wss://bitshares.nu/ws","wss://bitshares.openledger.info/ws","wss://bitshares.openledger.info/ws"],
  "cache":120000,
  "throttle":5,
  "generated":"once",
  "quartz":{
    "init" : [
      "#data '$contract'",
      "#flow('1.3.0',1,3)",
      "#data {'method': 'call', 'params': [1, 'login', ['', '']], 'id': Math.floor(Math.random()*10000)}",
      "#curl('asset://$symbol')",
      "done"
    ],
    "status" : [
      "data {'method':'call', 'params':[0,'get_dynamic_global_properties',[]], id: Math.floor(Math.random()*10000)}",
      "curl('asset://$symbol')",
      "test($,1,2)",
      "stop(0,{module:'$symbol',synced:null,blocks:data.result.head_block_number,fee:null,supply:null,difficulty:null,testmode:null,version:null})",
      "stop(1,'No result')"
    ],
    "unspent" : [
      "data {'method': 'call', 'params': [1, 'login', ['', '']], 'id': Math.floor(Math.random()*10000)}",
      "curl('asset://$symbol')",
      "test(${.result},2,1)",
      "stop(1,'Log in for validation unsuccesfull.')",
      "data {'method':'call', 'params':[0,'get_account_by_name',['$1']], id: Math.floor(Math.random()*10000)}",
      "curl('asset://$symbol')",
      "tran('.result.id',2,1)",
      "stop(1,'Source Id could not be found.')",
      "poke 'source'",
      "data {'method':'call', 'params':[0,'get_account_by_name',['$3']], id: Math.floor(Math.random()*10000)}",
      "curl('asset://$symbol')",
      "tran('.result.id',2,1)",
      "stop(1,'Target Id could not be found.')",
      "poke 'target'",
      "stop(0,{source:'$source',target:'$target'})"
    ],
    "balance" : [
      "data {'method':'call', 'params':[0,'get_named_account_balances',['$1',['$contract']]], id: Math.floor(Math.random()*10000)}",
      "curl('asset://$symbol')",
      "tran('.result[0].amount',2,1)",
      "stop(1,'Balance could not be retrieved.')",
      "atom",
      "pass"
    ],
    "push" : [
      "{'method':'call', 'params':['broadcast_transaction',['$1']], id: Math.floor(Math.random()*10000)}",
      "curl('asset://$symbol')",
      "test($,2,1)",
      "stop(1,'Broadcast failed!')",
      "tran('.result',2,1)",
      "stop(1,'No result!')",
      "pass()"
    ],
    "validate" : [
      "{'method': 'call', 'params': [1, 'login', ['', '']], 'id': Math.floor(Math.random()*10000)}",
      "curl('asset://$symbol')",
      "test(${.result},2,1)",
      "stop(1,'Log in for validation unsuccesfull.')",
      "data {'method':'call', 'params':[0,'get_account_by_name',['$1']], id: Math.floor(Math.random()*10000)}",
      "curl('asset://$symbol')",
      "test({$.result},2,1)",
      "stop(0,'unregistered')",
      "stop(0,'valid')"
    ],
    "factor" : [
      "pass('$factor')"
    ],
    "history" : [
      "stop(1,'Not yet implemented!')"
    ],
    "contract" : [
      "pass('undefined')"
    ],
    "fee" : [
      "pass('$fee')"
    ],
    "history" : [
      "{'method':'call', 'params':[0,'get_account_history',['$1']], id: Math.floor(Math.random()*10000)}",
      "curl('asset://$symbol')"
    ],
    "transaction" : [
      "{'method':'call', 'params':[0,'get_recent_transaction_by_id',['$1']], id: Math.floor(Math.random()*10000)}",
      "curl('asset://$symbol')"
    ],
    "sample" : [
      "stop(0,{address:'internet-of-coins',transaction:'67693820ff7f4e039d6ca18658461e967d8ecd11'})"
    ]
  }
}
