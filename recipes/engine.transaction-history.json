{
  "engine":"transaction-history",
  "name":"Transaction history engine",
  "cacheHistoryTime": "60000",
  "import": "transaction-data",
  "quartz" : {
    "checkTimestampForUpdate": [
      "list $1-${symbol}-history-*",
      "void {'array':15} 1",
      "jpar",
      "pick",
      "poke fileName",
      "data $1",
      "filt '-'",
      "size",
      "math '+3'",
      "poke hyphenCount",
      "peek fileName",
      "splt '-' $hyphenCount",
      "poke timestamp",
      "date 'now'",
      "math '-$timestamp'",
      "done",
      "@fail",
      "done 999999999999"
    ],
    "greaterThanCache/address/count/offset": [
      "list ${address}-${symbol}-history-* 2 1 1" ,
      "done false",
      "pick",
      "load",
      "jpar",
      "size",
      "math '<$count*($offset+1)'"
    ],
    "history": [
      "poke addr $1",
      "poke count $2 12",
      "poke offset $3 0",
      "call greaterThanCache/$addr/$count/$offset",
      "true '$' @retrieve 1",
      "call checkTimestampForUpdate/$1",
      "true '$<${cacheHistoryTime}' @returnCachedHistory @retrieve",
      "@retrieve",
      "peek apiProvidesFullTx",
      "flow false @idx @full",
      "@full",
      "call retrieveLatestTransactions/$addr/$count/$offset",
      "done",
      "@idx",
      "call retrieveNewTransactionIds/$addr/$count/$offset",
      "done",
      "@returnCachedHistory",
      "call getCachedTransactionIds/$1/$count/$offset"
    ],
    "retrieveNewTransactionIds": [
      "call getHistory/$1/$2/$3",
      "poke idx",
      "fork 'saveNewTransactionIds/$1/$2/$3/false'",
      "data $idx",
      "done"
    ],
    "removeFile": [
      "tran .value",
      "burn $ @done @fail",
      "@fail",
      "fail 'Could not remove legacy file.'",
      "@done",
      "done"
    ],
    "removeTransactionFile": [
      "data $1-${symbol}-$2*",
      "poke tx",
      "seek 1 @fail",
      "list $tx",
      "jpar",
      "each removeFile",
      "@fail",
      "done"
    ],
    "saveNewTransactionIds": [
      "poke txs",
      "call getCachedTransactionIds/$1/1000/0",
      "fuse $txs",
      "uniq",
      "poke idx",
      "peek apiProvidesFullTx",
      "flow true 1 4",
      "peek idx",
      "call sortIdxByTimestamp",
      "poke idx",
      "peek idx",
      "void {'array':1} 3",
      "peek idx",
      "jump 2",
      "poke idx",
      "data $1-${symbol}-history-*",
      "list $",
      "poke history",
      "void {'array': 2} 1",
      "data '$4'",
      "flow {true:7} 1",
      "@update",
      "date now",
      "poke timestamp",
      "data $1-${symbol}-history-$timestamp",
      "jump @save",
      "@used",
      "data $history",
      "pick",
      "@save",
      "poke fileName",
      "call removeTransactionFile/$1/history/$idx",
      "data $fileName",
      "save $ $idx",
      "poke count $2 12",
      "poke offset $3 0",
      "math '$count+$offset'",
      "poke endingIndex",
      "data $idx",
      "pick $offset $endingIndex",
      "poke idx",
      "@done",
      "done $idx"
    ],
    "sortIdxByTimestamp": [
      "each getTxData",
      "sort desc '.timestamp'",
      "tran '[].id'"
    ],
    "getTxData": [
      "tran .value",
      "list $-${symbol}-transaction",
      "void {'array':6} 1",
      "pick",
      "load",
      "jpar",
      "done",
      "@fail",
      "done []"
    ],
    "getCachedTransactionIds": [
      "math $2+$3",
      "poke endingIndex",
      "list $1-${symbol}-history-*",
      "void {'array':6} 1",
      "pick",
      "load",
      "jpar",
      "pick $3 $endingIndex",
      "done",
      "done []"
    ],
    "cacheTransactionData": [
      "tran '.value' 1 4",
      "poke txData",
      "tran '.id' 2 1",
      "fail 'Incorrect transaction data format.'",
      "poke txID",
      "peek txData",
      "call saveTransactionData/$txID",
      "@done",
      "done $txData"
    ],
    "cacheHistory": [
      "poke txs",
      "each cacheTransactionData/$1",
      "done $txs"
    ]
  }
}
