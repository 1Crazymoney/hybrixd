{
  "engine":"insight",
  "name":"Insight HTTP(S) engine",
  "module":"quartz",
  "cache":1000,
  "throttle":1,
  "timeout":24000,
  "longTimeout":60000,
  "shortTimeout":15000,
  "factor":8,
  "fee":0,
  "feePerByte":0,
  "confirmsRequired":6,
  "utxo_unspent_prefix":"76a914",
  "utxo_unspent_suffix":"88ac",
  "trimAddrHexL":"2",
  "trimAddrHexR":"8",
  "cron":600,
  "quartz":{
    "balance" : [
      "time $timeout",
      "curl /addr/$1?noTxList=1 {} {timeout:$shortTimeout} 2 1",
      "fail 'Connection to host failed'",
      "tran {confirmed:'.balance',unconfirmed:'.unconfirmedBalance'} 3 1",
      "data 0",
      "jump 2",
      "math '${.confirmed}+${.unconfirmed}'"
    ],
    "unspent" : [
      "data $2",
      "void 1 3",
      "call unspentAll/$1",
      "done",
      "poke inputval '$2' '1000000000000'",
      "with inputval atom 1",
      "time $timeout",
      "curl /addr/$1/utxo 2 1 ",
      "fail 'Could not connect to host'",
      "tran []{script:.scriptPubKey,amount:=atom(.amount,true)|.satoshis,txid:.txid,txn:.vout}",
      "sort '.amount'",
      "scan 'cnt<($inputval+val.amount)' '+val.amount'",
      "poke 'selected'",
      "tran '[].amount' 2 1",
      "data []",
      "math '+'",
      "with inputval [flow,'100000000000000000000',1,2] [done,'$'] [done]",
      "math '-$inputval'",
      "ship 2 2 1",
      "data 0",
      "done {unspents:$selected,change:'$'}"
    ],
    "unspentAll" : [
      "time $timeout",
      "curl /addr/$1/utxo 2 1",
      "fail 'Could not connect to host'",
      "tran []{script:.scriptPubKey,amount:=atom(.amount,true)|.satoshis,txid:.txid,txn:.vout}",
      "poke 'selected'",
      "tran '[].amount' 2 1",
      "data []",
      "math '+'",
      "with inputval [flow,'100000000000000000000',1,2] [done,'$'] [done]",
      "ship 2 2 1",
      "data 0",
      "done {unspents:$selected,change:'$'}"
    ],
    "push" : [
      "time $timeout",
      "data {'rawtx':'$1'}",
      "curl /tx/send POST {Accept:'application/json, text/plain, */*',Content-Type:'application/json;charset=utf-8',DNT:1,Connection:'keep-alive'} {timeout:$shortTimeout} @curlSucces @curlFail",
      "@curlFail",
      "fail 'Could not connect to host'",
      "@curlSucces",
      "tran '.txid' @succes @noId",
      "@noId",
      "tran '.error' @error @badTxRes",
      "@error",
      "fail '$'",
      "@badTxRes",
      "warn",
      "fail 'Bad transaction result: $'",
      "@succes",
      "tran .result 1 1",
      "done"
    ],
    "transactionData" : [
      "time $timeout",
      "curl /tx/$1 GET {'Content-Type': 'application/json'} {timeout:$shortTimeout} 2 1",
      "fail 'Could not connect to host'",
      "have .txid 2 1",
      "fail 'Could not read transaction data!'"
    ],
    "transaction" : [
      "# TODO fix this engine to provide better history!",
      "time $timeout",
      "call transactionData/$1",
      "poke txSource",
      "copy txSource txTarget",
      "with txSource [tran,'.vout[1].scriptPubKey.addresses[0]',2,1] [data,'unknown'] [done]",
      "with txTarget [tran,'.vout[0].scriptPubKey.addresses[0]',2,1] [data,'unknown'] [done]",
      "tran { id:'.txid', timestamp:'.time', amount:'.vout[0].value', symbol:'$symbol', fee:'=.fees|0', 'fee-symbol':'$symbol', source:'$txSource', target:'$txTarget', confirmed:'.confirmations' } @okayTx @badTx",
      "@badTx",
      "fail 'Cannot interpret transaction data!'",
      "@okayTx",
      "done"
    ],
    "attachment" : [
      "time $timeout",
      "call transactionData/$1",
      "tran .vout 1 @empty",
      "jstr",
      "splt 'OP_RETURN '",
      "pick 1",
      "splt '\"'",
      "tran '[0]' 2 @empty",
      "@empty",
      "data null",
      "done"
    ],
    "message" : [
      "time $timeout",
      "call attachment/$1",
      "data '$'",
      "flow 'null' 1 2",
      "done ''",
      "code hex utf8",
      "done"
    ],
    "history" : [
      "poke count $2 12",
      "poke offset $3 0",
      "time $longTimeout",
      "with countTo [data,'$count'] [math,'+$offset']",
      "curl /addrs/$1/txs?from=$offset&to=$countTo 2 1",
      "fail 'Could not connect to host'",
      "tran '.items' 1 @fail",
      "tran '[].txid' 1 @fail",
      "done",
      "@fail",
      "fail "
    ],
    "fee" : [
      "poke opreturnFee 0",
      "data $1",
      "void @finalize 1",
      "data '$1'",
      "ship 2 2 2 1",
      "size",
      "math '$*$feePerByte'",
      "poke opreturnFee",
      "@finalize",
      "peek local::fee $fee",
      "math '$+$opreturnFee'",
      "flow 'null' 1 2",
      "data '$fee'",
      "@feeDone"
    ],
    "experimental_A" : [
      "# get latest block hash",
      "curl /blocks?limit=3 2 1",
      "fail 'Could not connect to host'",
      "tran .blocks[].hash 2 1",
      "fail 'Cannot get fee!'",
      "# get at least 10 tx hashes",
      "each experimental_getBlock",
      "jstr",
      "repl '],[' ','",
      "drop 1 1",
      "jpar",
      "done",
      "# for every tx get fee",
      "# calculate median fee",
      "# DIVIDER",
      "peek local::fee $fee",
      "data '$'",
      "flow 'null' 1 2",
      "data '$fee'"
    ],
    "experimental_getBlock" : [
      "data ${.value}",
      "curl /txs/?block=$ 2 1",
      "fail 'Could not connect to host'",
      "tran .txs[].txid",
      "done"
    ],
    "sample" : [
      "done {address:'1F1tAaz5x1HUXrCNLbtMDqcw6o5GNn4xqX',transaction:'2c0832c153cf33327dae0e95a3bc39f4b02ae887725a32c07b1be47a2faffc55'}"
    ],
    "cron" : [
      "data '$symbol'",
      "flow 'undefined' 2 1",
      "call 'getFee'",
      "done"
    ],
    "getFee" : [
      "time $timeout",
      "curl /utils/estimatefee 2 1",
      "fail 'Could not connect to host'",
      "tran '.2' 1 3",
      "ship 1 2 2 2",
      "poke local::fee",
      "flow local::feePerByte {'0':1, 'undefined':1} 2",
      "math '$local::fee/100'",
      "poke local::feePerByte",
      "peek local::fee",
      "done"
    ]
  }
}
