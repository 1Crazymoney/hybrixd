{
  "symbol":"ark",
  "name":"Ark",
  "mode":"ark.main",
  "addressRegex":"^A\\w{33}$",
  "factor":8,
  "confirmed":3,
  "fee":0.1,
  "fee-symbol":"ark",
  "contract":null,
  "host":  "https://api.ark.io",
  "documentation":["https://docs.ark.io/api/public/v2/"],
  "cache":15000,
  "import": "transaction-history",
  "apiProvidesFullTx": true,
  "throttle":10,
  "version":"1",
  "genesisBlockTime":1490101200,
  "oldExplorer" : "https://explorer.ark.io/",
  "oldHost" : ["https://node1.arknet.cloud"],
  "quartz":{
    "sample" : [
      "done {address:'AQYZJ6Mkv4DhnXhrXdxXwNKRKGvgrkhnRF',transaction:'f70e8f32e8a16c1dd1a0e97fa4075f96d8e8e16065d1a4406851252832d8e608'}"
    ],
    "test":[
      "#update from 4BD494E3 to 4EA93EBF on 23-09-202",
      "done {hash:'4EA93EBF'}"
    ],
    "balance/address":[
      "curl '/api/v2/wallets/$address' {'Content-Type': 'application/json'} @curlSuccess @curlFail",
      "@curlFail",
      "regx '404' 2 1",
      "fail 'Error from $symbol host : $'",
      "data 0",
      "jump @tranSuccess",
      "@curlSuccess",
      "tran '.data.balance' @tranSuccess @tranFail",
      "@tranFail",
      "fail ${.error}",
      "@tranSuccess",
      "atom"
    ],
     "unspent/$address/amount/target/publicKey":[
      "curl '/api/v2/wallets/$1' {'Content-Type': 'application/json'} @curlSuccess @curlFail",
      "@curlFail",
      "regx '404' 2 1",
      "fail 'Error from $symbol host : $'",
      "data {nonce:'-1', address:'$address',balance:'0',publicKey:'$publicKey', attributes:{htlc:{locks:{},lockedBalance:'0'}},lockedBalance:'0',isDelegate:false,isResigned:false}",
      "jump @tranSuccess",
      "@curlSuccess",
      "tran '.data' @tranSuccess @tranFail",
      "@tranFail",
      "fail ${.error}",
      "@tranSuccess"
    ],
    "subhistory" : [
      "tran '.value.id' 1 @fail",
      "done",
      "@fail",
      "done 0"
    ],
    "reformatTx": [
      "tran .value 2 1",
      "fail 'failed reformatting transaction.'",
      "with reformatTimestamp [data,'${.timestamp.unix}']",
      "with reformatFee [data,'${.fee}'] [atom]",
      "with reformatAmount [data,'${.amount}'] [atom]",
      "tran { id:'.id', timestamp:'$reformatTimestamp', amount:'$reformatAmount', symbol:'$symbol', fee:'$reformatFee', 'fee-symbol':'${fee-symbol}', source:'.sender', target:'.recipient', confirmed:'.confirmations' } @tranSuccess @tranFail",
      "@tranSuccess",
      "done",
      "@tranFail",
      "fail 'Could not parse transaction'"
    ],
    "getHistory/address/count=12/offset=0": [
      "curl '/api/v2/wallets/$address/transactions?orderBy=timestamp:desc&limit=$count&offset=$offset' {'Content-Type': 'application/json'} @curlSuccess @curlFail",
      "@curlSuccess",
      "tran '.data' @tranSuccess @tranFail",
      "@tranSuccess",
      "done",
      "@curlFail",
      "regx '404' 1 2",
      "done []",
      "fail 'Error from $symbol host : $'",
      "@tranFail",
      "fail 'Could not parse history'"
    ],
    "push/rawTransaction":[
      "curl '/api/v2/node/configuration' GET",
      "tran('.data.nethash',2,1)",
      "fail 'Error from $symbol host : $'",
      "poke 'nethash'",
      "data '{\"transactions\": [$rawTransaction]}'",
      "curl POST '/api/v2/transactions' {'Content-Type': 'application/json', 'version': '$version', 'port': 1, 'nethash': '$nethash'} 1 2",
      "tran '.data.accept[0]' 2 1",
      "fail",
      "done"
    ],
    "getTransaction/transactionId":[
      "curl '/api/v2/transactions/$transactionId' {'Content-Type': 'application/json'} @curlSuccess @curlFail",
      "@curlSuccess",
      "tran '.data' @dataTranSuccess @dataTranFail",
      "@dataTranFail",
      "fail 'Error from $symbol host : $'",
      "@dataTranSuccess",
      "tran {value: $}",
      "call reformatTx",
      "done",
      "@curlFail",
      "fail 'Unable to retrieve transaction.'"
    ]
  }
}
