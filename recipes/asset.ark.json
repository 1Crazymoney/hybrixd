{
  "symbol":"ark",
  "name":"Ark",
  "module":"quartz",
  "mode":"ark",
  "addressRegex":"^A\\w{33}$",
  "factor":8,
  "fee":0.1,
  "fee-symbol":"ark",
  "contract":null,
  "blockexplorer":["https://explorer.ark.io/"],
  "oldHost":["https://node1.arknet.cloud"],
  "host":["https://api.ark.io"],
  "documentation":["https://docs.ark.io/api/public/v2/"],
  "cache":15000,
  "throttle":5,
  "version":"2",
  "genesisBlockTime":1490101200,
  "quartz":{
    "sample" : [
      "done {address:'AQYZJ6Mkv4DhnXhrXdxXwNKRKGvgrkhnRF',transaction:'f70e8f32e8a16c1dd1a0e97fa4075f96d8e8e16065d1a4406851252832d8e608'}"
    ],
    "test":[
      "done {hash:dynamic}"
    ],
    "balance":[
      "curl '/api/v2/wallets/$1' {'Content-Type': 'application/json'} @curlSuccess @curlFail",
      "@curlFail",
      "fail 'Unable to retrieve balance.'",
      "@curlSuccess",
      "tran '.data.balance' @tranSuccess @tranFail",
      "@tranFail",
      "fail ${.error}",
      "@tranSuccess",
      "atom"
    ],
    "subhistory" : [
      "tran '.value.id' 1 @fail",
      "done",
      "@fail",
      "done 0"
    ],
    "history":[
      "poke count $2 12",
      "poke offset $3 0",
      "curl '/api/v2/wallets/$1/transactions?orderBy=timestamp:desc&limit=$count&offset=$offset' {'Content-Type': 'application/json'} @curlSuccess @curlFail",
      "@curlSuccess",
      "tran '.data' @tranSuccess @tranFail",
      "@tranSuccess",
      "each 'subhistory'",
      "done",
      "@curlFail",
      "fail 'Unable to retrieve history.'",
      "@tranFail",
      "fail 'Could not parse history'"
    ],
    "push":[
      "curl '/api/blocks/getNetHash'",
      "tran('.nethash',2,1)",
      "fail 'nethash could not be retrieved'",
      "poke 'nethash'",
      "data {transaction: '$1'}",
      "curl '/peer/transactions' {'Content-Type': 'application/json', 'version': '$version', 'port': 1, 'nethash': '$nethash'}",
      "tran('.transactionId',2,1)",
      "fail",
      "done"
    ],
    "transaction":[
      "curl '/api/v2/transactions/$1' {'Content-Type': 'application/json'} @curlSuccess @curlFail",
      "@curlSuccess",
      "tran '.data' @dataTranSuccess @dataTranFail",
      "@dataTranFail",
      "fail ${.error}",
      "@dataTranSuccess",
      "with reformatTimestamp [data,'${.timestamp.unix}']",
      "with reformatFee [data,'${.fee}'] [atom]",
      "with reformatAmount [data,'${.amount}'] [atom]",
      "tran { id:'.id', timestamp:'$reformatTimestamp', amount:'$reformatAmount', symbol:'$symbol', fee:'$reformatFee', 'fee-symbol':'${fee-symbol}', source:'.sender', target:'.recipient', confirmed:'.confirmations' } @tranSuccess @tranFail",
      "@curlFail",
      "fail 'Unable to retrieve transaction.'",
      "@tranFail",
      "fail 'Could not parse transaction'",
      "@tranSuccess",
      "done"
    ]
  }
}
