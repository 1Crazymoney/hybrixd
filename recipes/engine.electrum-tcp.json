{
  "engine":"electrum-tcp",
  "name":"Electrum TCP connector",
  "module":"quartz",
  "cache":1000,
  "throttle":10,
  "timeout":60000,
  "utxo_unspent_prefix":"76a914",
  "utxo_unspent_suffix":"88ac",
  "quartz":{
    "status" : [
      "time($timeout)",    
      "curl('asset://$symbol','','',{'jsonrpc':'2.0','id':0,'method':'server.version','params':[]},{'content-type':'text/plain'})",
      "test(data,1,2)",
      "stop(0,{module:'$symbol',synced:null,blocks:null,fee:null,supply:null,difficulty:null,testmode:null,version:data.result})",
      "stop(1,'No result!')"
    ],
    "unspent" : [
      "data('$1')",
      "code('bs58','hex')",
      "trim(2,-10)",
      "poke('script','$utxo_unspent_prefix'+data+'$utxo_unspent_suffix')",
      "time($timeout)",
      "curl('asset://$symbol','','',{'jsonrpc':'2.0','id':0,'method':'blockchain.address.listunspent','params':['$1']})",
      "tran('.result',2,1)",
      "fail('Bad input unspents from Electrum!')",
      "each(data,'unspent_tran')",
      "sort('.amount')",
      "scan('cnt<($2+val.amount)','+val.amount')",
      "poke('selected')",
      "flat('.amount')",
      "math('+')",
      "math('-$2')",
      "done({unspents:$selected,change:data})"
    ],
    "unspent_tran" : [
      "data(data.value)",
      "poke('unspent')",
      "tran('.value',2,1)",
      "data(0)",
      "atom()",
      "poke('amount')",
      "peek('unspent')",
      "tran({script:'$parent::script',amount:'$amount',txid:'.tx_hash',txn:'.tx_pos'},2,1)",
      "fail('Bad input unspents from Electrum!')",
      "done()"
    ],
    "balance" : [
      "time($timeout)",
      "curl('asset://$symbol','','',{'jsonrpc':'2.0','id':0,'method':'blockchain.address.get_balance','params':['$1']})",
      "tran({confirmed:'.result.confirmed',unconfirmed:'.result.unconfirmed'},2,1)",
      "fail('No result!')",
      "time($cache,data)",
      "math(data.confirmed+'+'+data.unconfirmed)",
      "atom()",
      "pass()"
    ],
    "push" : [
      "time($timeout)",
      "curl('asset://$symbol','','',{'jsonrpc':'2.0','id':0,'method':'blockchain.transaction.broadcast','params':['$1']})",
      "test(data,2,1)",
      "stop(1,'Broadcast failed!')",
      "tran('.result',2,1)",
      "stop(1,'No result!')",
      "test(data[0]===true,2,1)",
      "stop(1,data[1])",
      "pass(data[1])"
    ],
    "factor" : [
      "pass('$factor')"
    ],
    "transaction" : [
      "time($timeout)",
      "curl('asset://$symbol','','',{'jsonrpc':'2.0','id': 1, 'method': 'blockchain.transaction.get', 'params': ['$1',true] })",
      "tran('.result',2,1)",
      "stop(1,'No result')",
      "pass(data)"
    ],
    "sample" : [
      "stop(0,{address:'1F1tAaz5x1HUXrCNLbtMDqcw6o5GNn4xqX',transaction:'2c0832c153cf33327dae0e95a3bc39f4b02ae887725a32c07b1be47a2faffc55'})"
    ],
    "history" : [
      "rout('/source/blockexplorer/$symbol/history/$1')"
    ],
    "contract" : [
      "stop(1,'Not yet implemented!')"
    ],
    "fee" : [
      "time($timeout)",
      "curl('asset://$symbol','','',{'jsonrpc':'2.0','id': 1, 'method': 'blockchain.estimatefee', 'params': ['6'] })",
      "tran('.result',1,4)",
      "test(data>0,1,3)",
      "pass()",
      "jump(2)",
      "pass('$fee')"
    ]
  }
}
