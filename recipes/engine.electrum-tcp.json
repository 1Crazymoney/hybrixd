{
  "engine":"electrum-tcp",
  "name":"Electrum TCP connector",
  "module":"quartz",
  "cache":1000,
  "throttle":0.5,
  "timeout":24000,
  "longtimeout":60000,
  "confirmsRequired":6,
  "utxo_unspent_prefix":"76a914",
  "utxo_unspent_suffix":"88ac",
  "trimAddrHexL":"2",
  "trimAddrHexR":"8",
  "cron":600,
  "quartz":{
    "unspent" : [
      "poke inputval '$2'",
      "vars { inputval:'99999999999999999999' }",
      "data '$1'",
      "code base58 hex",
      "drop $trimAddrHexL $trimAddrHexR",
      "data '$utxo_unspent_prefix.${data}.$utxo_unspent_suffix'",
      "excl '.'",
      "poke script",
      "time $longtimeout",
      "data {'jsonrpc':'2.0','id':0,'method':'blockchain.address.listunspent','params':['$1']}",
      "curl asset://$symbol POST {} {'timeout':$longtimeout}",
      "tran '.result' 2 1",
      "fail 'Bad input unspents from Electrum!'",
      "each $ 'unspent_tran'",
      "sort '.amount'",
      "scan 'cnt<($inputval+val.amount)' '+val.amount'",
      "poke 'selected'",
      "tran '[].amount' 2 1",
      "data []",
      "math '+'",
      "math '-$inputval'",
      "ship 2 2 1",
      "data 0",
      "form",
      "done {unspents:$selected,change:'$'}"
    ],
    "unspent_tran" : [
      "data ${.value}",
      "poke unspent",
      "tran '.value' 2 1",
      "data 0",
      "atom",
      "poke amount",
      "peek unspent",
      "tran {script:'$parent::script',amount:'$amount',txid:'.tx_hash',txn:'.tx_pos'} 2 1",
      "fail 'Bad input unspents from Electrum!'",
      "done"
    ],
    "balance" : [
      "time $timeout",
      "data {'jsonrpc':'2.0','id':0,'method':'blockchain.address.get_balance','params':['$1']}",
      "curl 'asset://$symbol'",
      "tran {confirmed:'.result.confirmed',unconfirmed:'.result.unconfirmed'} 3 1",
      "data 0",
      "jump 3",
      "time $cache",
      "math '${.confirmed}+${.unconfirmed}'",
      "atom"
    ],
    "push" : [
      "time $timeout",
      "data {'jsonrpc':'2.0','id':0,'method':'blockchain.transaction.broadcast','params':['$1']}",
      "curl asset://$symbol",
      "tran '.result' 4 1",
      "tran('.error',1,2)",
      "fail ${.message}",
      "fail 'Bad transaction result!'",
      "done"
    ],
    "transactionData" : [
      "time $longtimeout",
      "data {jsonrpc:'2.0',id:1,method:'blockchain.transaction.get',params:['$1',true]}",
      "curl 'asset://$symbol' 'POST'  {} {retry:15,timeout:$timeout}",
      "tran .result 2 1",
      "fail 'Could not get transaction data!'",
      "done"
    ],
    "transaction" : [
      "time $longtimeout",
      "call transactionData/$1",
      "# TODO: the source address cannot be gotten from vin, must query twice to get the input(s)",
      "tran { id:'.txid', timestamp:'.time', amount:'.vout[0].value', symbol:'$symbol', fee:'$local::fee', 'fee-symbol':'$symbol', source:'FIXME!', target:'.vout[0].scriptPubKey.addresses[0]', confirmed:'.confirmations' } 2 1",
      "fail 'Cannot read transaction data!'",
      "done"
    ],
    "attachment" : [
      "time $longtimeout",
      "call transactionData/$1",
      "tran .vout 1 @empty",
      "jstr",
      "splt 'OP_RETURN '",
      "pick 1",
      "splt '\"'",
      "tran '[0]' 2 @empty",
      "@empty",
      "data null",
      "done"
    ],
    "message" : [
      "time $longtimeout",
      "call attachment/$1",
      "code hex utf8",
      "done"
    ],
    "history" : [
      "time $longtimeout",
      "data {jsonrpc:'2.0',id:6,method:'blockchain.address.get_history',params:['$1']}",
      "curl 'asset://$symbol' 'POST' {} {retry:15,timeout:$timeout,cache:5000}",
      "tran '.result' 2 1",
      "fail 'Could not query history!'",
      "sort ['.height','num','desc']",
      "tran '[].tx_hash'"
    ],
    "status" : [
      "time $timeout",
      "data {jsonrpc:'2.0',id:6,method:'blockchain.address.subscribe',params:['$1']}",
      "curl 'asset://$symbol' 'POST' {} {retry:15,timeout:$timeout,cache:1000}",
      "tran '.result' 2 @failStatus",
      "data null",
      "poke firstHash",
      "wait 2000",
      "data {jsonrpc:'2.0',id:6,method:'blockchain.address.subscribe',params:['$1']}",
      "curl 'asset://$symbol' 'POST' {} {retry:15,timeout:$timeout,cache:1000}",
      "tran '.result' 2 @failStatus",
      "poke secondHash",
      "excl $firstHash 3 1",
      "data ['$secondHash']",
      "jump 2",
      "data ['$firstHash','$secondHash']",
      "join",
      "hash sha256",
      "jump @done",
      "@failStatus",
      "fail 'Cannot get status information!'",
      "@done"
    ],
    "sample" : [
      "done {address:'1F1tAaz5x1HUXrCNLbtMDqcw6o5GNn4xqX',transaction:'2c0832c153cf33327dae0e95a3bc39f4b02ae887725a32c07b1be47a2faffc55'}"
    ],
    "fee" : [
      "peek local::fee",
      "data '$'",
      "flow 'null' 1 2",
      "data '$fee'"
    ],
    "cron" : [
      "data '$symbol'",
      "flow 'undefined' 2 1",
      "call 'getFee'",
      "done"
    ],
    "getFee" : [
      "time $timeout",
      "data {'jsonrpc':'2.0','id': 1, 'method': 'blockchain.estimatefee', 'params': ['$confirmsRequired'] }",
      "curl asset://$symbol",
      "tran '.result' 1 3",
      "ship 1 2 2",
      "poke local::fee",
      "done"
    ]
  }
}
