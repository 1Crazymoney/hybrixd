{
  "engine":"exchange_biki",
  "name":"Engine for pushing Biki commands to exchange (orders, cancels, etc.)",
  "module":"quartz",
  "host":["https://openapi.biki.cc","https://openapi.biki.com"],
  "timeout":10000,
  "cache":3000,
  "apiKey":"your_Biki_API_key",
  "secretKey":"your_Biki_secret_key",
  "quartz" : {
    "balance/symbol" : [
      "call signBiki",
      "curl '/open/api/user/account?$' GET 2 1",
      "fail 'Bad response from Biki!'",
      "tran '.data.coin_list'",
      "find {'coin':'$symbol'}",
      "tran '[].normal' @success",
      "fail",
      "@success",
      "pick"
    ],
    "getOrderList/symbol/base" : [
      "with pair [data,'$symbol$base'] [case,lower]",
      "data 'symbol=$pair'",
      "call signBiki/$",
      "curl '/open/api/v2/all_order?$' GET 2 1",
      "fail 'Bad response from Biki!'",
      "tran '.data.orderList' 1 2",
      "done",
      "fail"
    ],
    "prefixOrderIds/pair" : [
      "tran .value",
      "data '$pair.$'"
    ],
    "orderList/symbol/base" : [
      "call getOrderList/$symbol/$base",
      "tran '[].id'",
      "void 'null' @empty",
      "each prefixOrderIds/$symbol$base",
      "sort",
      "done",
      "@empty",
      "done []"
    ],
    "orderCreate/side/symbol/amount/base/price" : [
      "with pair [data,'$symbol$base'] [case,lower]",
      "with side [flow,'bid',1,2] [done,'BUY'] [done,'SELL']",
      "data 'side=$side&type=1&volume=$amount&price=$price&symbol=$pair&fee_is_user_exchange_coin=0'",
      "call signBiki/$",
      "curl '/open/api/create_order' POST {'Content-Type':'application/x-www-form-urlencoded'} 2 1",
      "fail 'Bad response from Biki!'",      
      "tran '.data.order_id' 1 2",
      "done '$pair.$'",
      "tran '.msg'",
      "fail 'Cannot create the order! Error: $'"
    ],
    "orderCancel/orderId" : [
      "data '$orderId'",
      "splt '.'",
      "poke pair",
      "copy pair orderId",
      "with pair [pick,0]",
      "with orderId [pick,1]",
      "data 'symbol=$pair&order_id=$orderId'",
      "call signBiki/$",
      "curl '/open/api/cancel_order' POST {'Content-Type':'application/x-www-form-urlencoded'} 2 1",
      "fail 'Bad response from Biki!'",      
      "tran '.msg' 1 @failed",
      "flow 'suc' 1 @failed",
      "done 'Order $orderId cancelled.'",
      "@failed",
      "fail 'Cannot cancel the order! Error: $'"
    ],
    "orderCancelAll/symbol/base" : [
      "with pair [data,'$symbol$base'] [case,lower]",
      "data 'symbol=$pair'",
      "call signBiki/$",
      "curl '/open/api/cancel_order_all' POST {'Content-Type':'application/x-www-form-urlencoded'} 2 1",
      "fail 'Bad response from Biki!'",      
      "tran '.msg' 1 @failed",
      "flow 'suc' 1 @failed",
      "done 'All $pair.* orders cancelled.'",
      "@failed",
      "fail 'Cannot cancel all orders! Error: $'"    
    ],
    "orderBook/symbol/base" : [
      "with pair [data,'$symbol$base'] [case,lower]",
      "data 'symbol=$pair&type=step0'",
      "curl '/open/api/market_dept?$' GET 2 1",
      "fail 'Bad response from Biki!'",
      "tran '.data.tick' 1 @failed",
      "with asks [data,$] [tran,'.asks'] [sort,'asc','val']",
      "with bids [data,$] [tran,'.bids'] [sort,'asc','val']",
      "data { 'asks':$asks , 'bids':$bids }",
      " # ugly hack follows against stringification ",
      "jstr",
      "excl '\"'",
      "jpar"
    ],
    "spread/symbol/base" : [
      "call orderBook/$symbol/$base",
      "with bestAsk [data,$] [tran,'.asks'] [pick] [pick]",
      "with bestBid [data,$] [tran,'.bids'] [pick] [pick]",
      "data [ $bestAsk , $bestBid ]"
    ],
    "signBiki/query" : [
      "date now",
      "data '${}000'",
      "poke timestamp",
      "with queryString [data,'$query'] [flow,'undefined',2] [done] [done,'']",
      "data ['api_key=$apiKey','$queryString','time=$timestamp']",
      "excl ''",
      "join '&'",
      "splt '&'",
      "# params must be sorted for Biki to accept the signature!",
      "sort",
      "join '&'",
      "poke getString",
      "excl '&'",
      "excl '='",
      "push '$secretKey'",
      "hash md5",
      "done '$getString&sign=$'"
    ]
  },
  "router" : {
    "_hidden" : true,
    "balance": {
      "_ref" : {
        "_list" : "symbol",
        "_this" : "Get the balance of an exchange asset."
      }
    },
    "orderBook": {
      "_ref" : {
        "_list" : "symbol",
        "_help" : "Specify the asset to list orderbook for.",
        "_ref" : {
          "_list" : "base",
          "_this" : "Against the base pair that is being traded."
        }
      }
    },
    "orderList": {
      "_ref" : {
        "_list" : "symbol",
        "_help" : "Specify the asset to list orders.",
        "_ref" : {
          "_list" : "base",
          "_this" : "Against the base pair that they are traded for."
        }
      }
    },
    "orderData": {
      "_ref" : {
        "_list" : "orderId",
        "_this" : "Get the data of an order."
      }
    },
    "orderCreate": {
      "_ref" : {
        "_list" : "side",
        "_help" : "Market side, ask (sell) or bid (buy).",
        "_ref" : {
          "_list" : "symbol",
          "_help" : "Asset symbol to buy or sell.",
          "_ref" : {
            "_list" : "amount",
            "_help" : "Amount of the asset to buy or sell.",
            "_ref" : {
              "_list" : "base",
              "_help" : "Base asset symbol to define order price.",
              "_ref" : {
                "_list" : "price",
                "_this" : "Base asset price to buy or sell for."
              }
            }
          }
        }
      }
    },
    "orderCancel": {
      "_ref" : {
        "_list" : "orderId",
        "_this" : "Cancel an order."
      }
    },
    "orderCancelAll": {
      "_ref" : {
        "_list" : "symbol",
        "_help" : "Asset symbol for which to cancel orders.",
        "_ref" : {
          "_list" : "base",
          "_this" : "Asset base for which to cancel orders."
        }
      }
    }    
  }  
}
