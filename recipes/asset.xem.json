{
  "symbol":"xem",
  "name":"New Economy Movement",
  "module":"quartz",
  "mode":"nem",
  "factor":6,
  "fee":0.05,
  "fee-mosaic":0.9,
  "fee-symbol":"xem",
  "Zhost":["http://bigalice3.nem.ninja:7890","http://199.217.118.114:7890","http://62.109.20.138:7890","http://plum.supernode.me:7890","http://103.27.76.170:7890","http://supernode.host:7890","http://supernode.nem-cloud.info:7890","http://nano.innermedia.net:7890","http://ninja2016.dynu.com:7890","http://shibuya.supernode.me:7890","http://supernode.nem-blockchain.solutions:7890","http://pattaya1node.ddns.net:7890","http://nsm.supernode.me:7890","http://esposium.de:7890","http://nem.homeip.net:7890","http://go.nem.ninja:7890"],
  "host":["http://bigalice3.nem.ninja:7890"],
  "cache":1000,
  "throttle":5,
  "quartz":{
    "init" : [
      "#test('$contract'==='undefined',1,3)",
      "#curl('asset://$symbol','/heartbeat','GET')",
      "#logs(1,'module $symbol: '+(data && typeof data.message!=='undefined' && data.message==='ok'?'connected':'failed connection')+' to host [$host]')"
    ],
    "status" : [
      "curl('asset://$symbol','/heartbeat','GET')",
      "stop(0,{module:'$symbol',synced:null,blocks:null,fee:null,supply:null,difficulty:null,testmode:null,version:null})"
    ],
    "unspent" : [
      "test('$contract'==='undefined',1,2)",
      "stop(0,'Unspent returns mosaic data only in NEM tokens.')",
      "poke('proc::namespace','$contract'.split(':')[0])",
      "curl('asset://$symbol','/account/mosaic/definition/page?address=$originator'+'&parent=$proc::namespace','GET')",
      "tran('.data',1,2)",
      "find({'namespaceId':'$proc::namespace'},2,1)",
      "stop(1,'Contract address invalid or no mosaics found!')",
      "tran('.0')",
      "pass(data)"
    ],
     "balance" : [
      "time(32000)",
      "test('$contract'==='undefined',1,6)",
      "curl('asset://$symbol','/account/get?address='+'$1'.replace(/-/g,''),'GET')",
      "tran('.account.balance',2,1)",
      "stop(1,null)",
      "atom()",
      "done()",
      "poke('proc::namespace','$contract'.split(':')[0])",
      "curl('asset://$symbol','/account/mosaic/owned?address='+'$1'.replace(/-/g,''),'GET')",
      "tran('.data',2,1)",
      "stop(1,null)",
      "find({'namespaceId':'$proc::namespace'},1,2)",
      "tran('[0].quantity',2,1)",
      "pass(0)",
      "time($cache,data)",
      "atom()"
    ],
    "push" : [
      "data('$1')",
      "jpar()",
      "curl('asset://$symbol','/transaction/announce','POST',data,{'content-type':'application/json'})",
      "tran('.transactionHash.data',2,1)",
      "fail(data.error+' : '+data.message)",
      "pass(data)"
    ],
    "factor" : [
      "pass('$factor')"
    ],
    "history": [
      "data []",
      "poke 'resultArray'",
      "data '$1'",
      "repl '-' ''",
      "poke 'address'",
      "poke 'count' '$2'",
      "poke 'offset' '$3'",
      "vars {'count':'12','offset':'0'}",
      "poke 'hash' ''",
      "math '($count+$offset)/25 .ceil'",
      "poke 'pages'",
      "poke 'loopVar' 0",
      "@countLoop",
      "data '$address'+'$hash'",
      "curl 'asset://$symbol','/account/transfers/all?address='+data,'GET','',{'content-type':'application/json'}",
      "tran '.data' 1 @badResponse",
      "each data 'format_tran'",
      "poke 'tempResultArray'",
      "pick -1",
      "tran '.id' 1 @badResponse",
      "push '&hash=' 0",
      "poke 'hash'",
      "with 'resultArray' ['fuse',$tempResultArray]",
      "loop @countLoop 'loopVar' '<$pages'",
      "@noNewData",
      "peek 'resultArray'",
      "sort ['.timestamp','num','desc']",
      "pick $offset,$offset+$count",
      "done",
      "@badResponse",
      "fail 'Bad response from XEM node!'"
    ],
    "format_tran": [
      "data data.value",
      "poke 'unformattedDataArray'",
      "tran {id:'.meta.hash.data',amount:'.transaction.amount',fee:'.transaction.fee',target:'.transaction.recipient',data:'.transaction.message'} 1 @badObject",
      "poke 'reformatObj'",
      "with 'reformatFee' ['data',$reformatObj] ['tran','.fee'] ['atom']",      
      "with 'reformatAmount' ['data',$reformatObj] ['tran','.amount'] ['atom']",
      "with 'reformatId' ['data',$reformatObj] ['tran','.id']",
      "with 'reformatData' ['data',$reformatObj] ['tran','.dat'] ['jstr'] ['flow','{}',1,2] ['data',''] ['done']",
      "with 'reformatTarget' ['data',$reformatObj] ['tran','.target'] ['case','upper'] ['push','-',[6,12,18,24,30,36]]",
      "with 'reformatSource' ['data','$1'] ['case','upper']",
      "peek 'unformattedDataArray'",
      "tran {id:'$reformatId', timestamp:'.transaction.timeStamp', amount:'$reformatAmount', symbol:'$symbol', fee:'$reformatFee', 'fee-symbol':'$fee-symbol', source:'$reformatSource', target:'$reformatTarget', data:'$reformatData'} 1 @badObject",
      "done",
      "@badObject",
      "done null"
    ],
    "contract" : [
      "test('$contract'==='undefined',1,2)",
      "stop(0,'Unspent returns data only for NEM mosiac tokens.')",
      "pass('$originator:$contract')"
    ],
    "fee" : [
      "test('$contract'==='undefined',1,3)",
      "data('$fee')",
      "jump(2)",
      "data('$fee-mosaic')",
      "pass()"
    ],
    "sample" : [
      "stop(0,{address:'NCKZD7-JGDLND-IVVPH6-U2PG2Q-KD3PX3-FX4CPZ-MF2A',transaction:'f857080798efa465f2453caface0c9338d3ced0d09c58a0d9035075f034ea460'})"
    ]
  }
}
