{
  "symbol":"xem",
  "name":"New Economy Movement",
  "module":"quartz",
  "mode":"nem",
  "addressRegex":"^([a-zA-Z0-9]{6}-){6}[a-zA-Z0-9]{4}$",
  "factor":6,
  "fee":0.05,
  "fee-mosaic":0.9,
  "fee-symbol":"xem",
  "host":["http://bigalice3.nem.ninja:7890","http://104.251.212.131:7890","http://45.124.65.125:7890","http://185.53.131.101:7890"],
  "hostOLD":["http://bigalice3.nem.ninja:7890","http://199.217.118.114:7890","http://62.109.20.138:7890","http://plum.supernode.me:7890","http://103.27.76.170:7890","http://supernode.host:7890","http://supernode.nem-cloud.info:7890","http://nano.innermedia.net:7890","http://ninja2016.dynu.com:7890","http://shibuya.supernode.me:7890","http://supernode.nem-blockchain.solutions:7890","http://pattaya1node.ddns.net:7890","http://nsm.supernode.me:7890","http://esposium.de:7890","http://nem.homeip.net:7890","http://go.nem.ninja:7890"],
  "cache":1000,
  "throttle":5,
  "quartz":{
    "unspent" : [
      "data '$contract'",
      "flow('undefined',1,2)",
      "stop(0,'Unspent returns mosaic data only in NEM tokens.')",
      "poke('proc::namespace','$contract'.split(':')[0])",
      "curl('asset://$symbol','/account/mosaic/definition/page?address=$originator&parent=$proc::namespace','GET')",
      "tran('.data',1,2)",
      "find({'namespaceId':'$proc::namespace'},2,1)",
      "stop(1,'Contract address invalid or no mosaics found!')",
      "tran('.0')",
      "pass(data)"
    ],
    "balance" : [
      "data '$1'",
      "excl '-'",
      "poke 'address'",
      "time(32000)",
      "data '$contract'",
      "flow('undefined',1,6)",
      "curl('asset://$symbol','/account/get?address=$address','GET')",
      "tran('.account.balance',2,1)",
      "stop(1,null)",
      "atom()",
      "done()",
      "poke('proc::namespace','$contract'.split(':')[0])",
      "curl('asset://$symbol','/account/mosaic/owned?address=$address','GET')",
      "tran('.data',2,1)",
      "stop(1,null)",
      "find({'namespaceId':'$proc::namespace'},1,2)",
      "tran('[0].quantity',2,1)",
      "pass(0)",
      "time($cache,data)",
      "atom()"
    ],
    "push" : [
      "data('$1')",
      "jpar()",
      "curl('asset://$symbol','/transaction/announce','POST',{'content-type':'application/json'})",
      "tran('.transactionHash.data',2,1)",
      "fail('${.error} : ${.message}')",
      "pass(data)"
    ],
    "factor" : [
      "pass('$factor')"
    ],
    "transaction" : [
      "curl asset://$symbol /transaction/get?hash=$1 GET {'content-type':'application/json'}",
      "poke 'unformattedDataArray'",
      "tran {id:'.meta.hash.data',amount:'.transaction.amount',fee:'.transaction.fee',target:'.transaction.recipient',source:'.transaction.signer',data:'.transaction.message'} 1 @badObject",
      "poke 'reformatObj'",
      "with 'reformatFee' ['data',$reformatObj] ['tran','.fee'] ['atom']",
      "with 'reformatAmount' ['data',$reformatObj] ['tran','.amount'] ['atom']",
      "with 'reformatId' ['data',$reformatObj] ['tran','.id']",
      "with 'reformatTarget' ['data',$reformatObj] ['tran','.target'] ['case','upper'] ['push','-',[6,12,18,24,30,36]]",
      "with 'reformatSource' ['data','FIXME!']",
      "peek 'unformattedDataArray'",
      "tran {id:'$reformatId', timestamp:'.transaction.timeStamp', amount:'$reformatAmount', symbol:'$symbol', fee:'$reformatFee', 'fee-symbol':'$fee-symbol', source:'$reformatSource', target:'$reformatTarget', confirmed:true} 1 @badObject",
      "done",
      "@badObject",
      "done null"
    ],
    "attachment" : [
      "curl asset://$symbol /transaction/get?hash=$1 GET {'content-type':'application/json'}",
      "poke 'unformattedDataArray'",
      "tran {id:'.meta.hash.data',amount:'.transaction.amount',fee:'.transaction.fee',target:'.transaction.recipient',source:'.transaction.signer',data:'.transaction.message'} 1 @badObject",
      "poke 'reformatObj'",
      "with 'reformatData' ['data',$reformatObj] ['tran','.data',1,3] ['jstr'] ['flow','{}',1,2] ['data',null] ['done']",
      "done $reformatData"
    ],
    "message" : [
      "call attachment/$1",
      "tran .payload 2 1",
      "done ''",
      "code hex utf8",
      "done"
    ],
    "history" : [
      "data []",
      "poke 'resultArray'",
      "data '$1'",
      "repl '-' ''",
      "poke 'address'",
      "poke 'hash' ''",
      "math '($count+$offset)/25 .ceil'",
      "poke 'pages'",
      "poke 'loopVar' 0",
      "@countLoop",
      "data '$address$hash'",
      "curl asset://$symbol /account/transfers/all?address=$address$hash GET {'content-type':'application/json'}",
      "tran '.data' 1 @badResponse",
      "each $ 'extract_hash_and_time'",
      "excl null",
      "poke 'tempResultArray'",
      "pick -1",
      "tran '.hash' 1 @badResponse",
      "push '&hash=' 0",
      "poke 'hash'",
      "with 'resultArray' ['fuse',$tempResultArray]",
      "loop @countLoop 'loopVar' '<$pages'",
      "@noNewData",
      "peek 'resultArray'",
      "sort ['.time','num','desc']",
      "tran '[].hash'",
      "jump @allDone",
      "@badResponse",
      "fail 'Could not query history! Bad response from XEM node!'",
      "@allDone"
    ],
    "extract_hash_and_time" : [
      "data ${.value}",
      "tran {hash:'.meta.hash.data', time:'.transaction.timeStamp'} 1 @badObject",
      "done",
      "@badObject",
      "done null"
    ],
    "contract" : [
      "data '$contract'",
      "flow('undefined',1,2)",
      "stop(0,'Unspent returns data only for NEM mosiac tokens.')",
      "pass('$originator:$contract')"
    ],
    "fee" : [
      "data '$contract'",
      "flow('undefined',1,3)",
      "data('$fee')",
      "jump(2)",
      "data('$fee-mosaic')",
      "pass()"
    ],
    "sample" : [
      "stop(0,{address:'NCKZD7-JGDLND-IVVPH6-U2PG2Q-KD3PX3-FX4CPZ-MF2A',transaction:'215b900475b13f724acc9fbe249bb9ffd31451c2352ed51b9637143cde4c260a'})"
    ]
  }
}
