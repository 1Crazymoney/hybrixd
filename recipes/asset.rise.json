{
  "symbol":"rise",
  "name":"Rise",
  "module":"quartz",
  "mode":"lisk.rise",
  "addressRegex":"^\\d{19}\\d?R$",
  "factor":8,
  "fee":0.1,
  "fee-symbol":"rise",
  "contract":null,
  "host":["https://wallet.rise.vision"],
  "cache":15000,
  "throttle":5,
  "version" : "0.1.2",
  "quartz":{
    "balance" :[
      "curl 'asset://$symbol' '/api/accounts/getBalance?address=$1' 'GET' {'Content-Type': 'application/json', 'version': '$version', 'port': 1, 'nethash': ''}",
      "tran('.unconfirmedBalance',2,1)",
      "fail 'Balance could not be retrieved'",
      "atom"
    ],
    "unspent" :[
      "done {unspents:[],change:'0'}"
    ],
    "sample" : [
      "done {address:'13188395790866768123R',transaction:'11931543500510473853'}"
    ],
    "history":[
      "poke count $2 12",
      "poke offset $3 0",
      "curl 'asset://$symbol' '/api/transactions?recipientId=$1&limit=$count&offset=$offset' 'GET' {'Content-Type': 'application/json', 'version': '$version', 'port': 1, 'nethash': ''}",
      "tran .transactions[].id 1 2",
      "done",
      "fail 'Unable to retrieve history.'"
    ],
    "push":[
      "curl 'asset://$symbol' '/api/blocks/getNetHash' 'GET' {'Content-Type': 'application/json', 'version': '$version', 'port': 1, 'nethash': ''}",
      "tran('.nethash',2,1)",
      "fail 'nethash could not be retrieved'",
      "poke 'nethash'",
      "data {transaction: '$1'}",
      "curl 'asset://$symbol' '/peer/transactions' 'POST' {'Content-Type': 'application/json', 'version': '$version', 'port': 1, 'nethash': '$nethash'}",
      "tran('.transactionId',2,1)",
      "fail",
      "done"
    ],
    "test":[
      "done {hash:dynamic}"
    ],
    "transactionData" : [
       "curl asset://$symbol /api/transactions?id=$1 GET {Accept:'application/json','Content-Type':'application/json'}",
       "tran .transactions 2 1",
       "fail 'Cannot get transaction data!'",
       "pick",
       "done"
    ],
     "transaction" : [
      "call transactionData/$1",
      "with reformatFee [data,'${.fee}'] [atom]",
      "with reformatAmount [data,'${.amount}'] [atom]",
      "tran { id:'.id', timestamp:'.timestamp', amount:'$reformatAmount', symbol:'$symbol', fee:'$reformatFee', 'fee-symbol':'${fee-symbol}', source:'.senderId', target:'.recipientId', confirmed:'.confirmations' } 2 1",
      "fail 'Cannot get transaction data2!'",
      "done"
    ]
  }
}
