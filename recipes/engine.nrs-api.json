{
  "engine":"nrs-api",
  "name":"NRS API engine",
  "cache":15000,
  "throttle":5,
  "timeout":60000,
  "factor":8,
  "fee":1,
  "feePerByte":0,
  "genesisBlockTime":1385294400,
  "import": "transaction-history",
  "apiProvidesFullTx": true,
  "chain":0,
  "quartz":{
    "balance":[
      "data '$symbol'",
      "find '.' 1 3",
      "call 'tokenBalance/$1'",
      "jump 2",
      "call 'mainBalance/$1'"
    ],
    "mainBalance":[
      "@retryLoop",
      "data $symbol",
      "flow {nxt:1,burst:1} 3",
      "data '?requestType=getBalance&account=$1'",
      "jump 2",
      "data '?requestType=getBalance&account=$1&chain=$chain'",
      "curl '$' {'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'} 2 1",
      "fail 'Could not connect to host'",
      "tran '.unconfirmedBalanceNQT' @returnBalance 1",
      "tran '.errorCode' 1 @retry",
      "data 'n$'",
      "flow {n3:1,n5:1} @retry",
      "done 0",
      "atom",
      "@retry",
      "logs 2 'module nrs-api: bad RPC response, retrying request...'",
      "wait 1500",
      "loop @retryLoop 'retries' '<5' '1'",
      "fail '0'",
      "@returnBalance",
      "atom",
      "done"
    ],
    "tokenBalance":[
      "poke address '$1'",
      "data '$symbol'",
      "find 'burst.' @burstToken @otherToken",
      "@otherToken",
      "curl ?requestType=getAccount&account=$address&includeAssets=true&includeCurrencies=true GET {'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'} 2 1",
      "fail 'Could not connect to host'",
      "jump @next",
      "@burstToken",
      "curl ?requestType=getAccount&account=$address GET {'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'} 2 1",
      "fail 'Could not connect to host'",
      "@next",
      "tran '.unconfirmedAssetBalances' @returnTokenBalance 1",
      "data '0'",
      "@returnTokenBalance",
      "find {asset:'$contract'} @tokenBalance 1",
      "data '0'",
      "atom",
      "done",
      "@tokenBalance",
      "tran '[0].unconfirmedBalanceQNT' 2 1",
      "fail",
      "atom",
      "done"
    ],
    "unspent":[
      "data '$symbol'",
      "find '.' 1 3",
      "call 'tokenUnspent/$1/$2/$3/$4/$5'",
      "jump @done",
      "call 'mainUnspent/$1/$2/$3/$4/$5'",
      "@done",
      "done"
    ],
    "mainUnspent":[
      "call 'fee'",
      "poke 'numFee'",
      "atom true",
      "poke 'txFee'",
      "data '$2'",
      "math '-$numFee'",
      "atom true",
      "poke 'txAmount'",
      "data $5",
      "poke message",
      "void 1 2",
      "poke message ''",
      "data $symbol",
      "flow {nxt:1,burst:1} 4",
      "data 'recipient=$3&publicKey=$4&amountNQT=$txAmount&feeNQT=$txFee&deadline=300&doNotSign=1&broadcast=false&message=$message'",
      "curl ?requestType=sendMoney POST {'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'} 2 1",
      "fail 'Could not connect to host'",
      "jump @result",
      "data 'recipient=$3&publicKey=$4&amountNQT=$txAmount&feeNQT=$txFee&deadline=300&doNotSign=1&broadcast=false&message=$message'",
      "curl ?requestType=sendMoney&chain=$chain POST {'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'} 2 1",
      "fail 'Could not connect to host'",
      "@result",
      "poke 'result'",
      "tran '.errorDescription' 1 2",
      "fail",
      "data $result",
      "done"
    ],
    "tokenUnspent":[
      "call 'fee'",
      "poke 'numFee'",
      "atom true",
      "poke 'txFee'",
      "data '$2'",
      "atom true",
      "poke 'txAmount'",
      "data $5",
      "poke message",
      "void 1 2",
      "poke message ''",
      "data 'recipient=$3&asset=$contract&publicKey=$4&quantityQNT=$txAmount&feeNQT=$txFee&deadline=300&doNotSign=1&broadcast=false&message=$message'",
      "poke unspentData",
      "data $symbol",
      "flow {nxt:1,burst:1} 4",
      "peek unspentData",
      "curl ?requestType=transferAsset POST {'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'} 2 1",
      "fail 'Could not connect to host'",
      "jump @done",
      "peek unspentData",
      "curl ?requestType=transferAsset&chain=$chain POST {'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'} 2 1",
      "fail 'Could not connect to host'",
      "tran '.errorDescription' 1 2",
      "fail",
      "@done",
      "done"
    ],
    "push":[
      "@retryLoop",
      "data $symbol",
      "flow {nxt:1,burst:1} 5",
      "data transactionBytes=$1",
      "curl ?requestType=broadcastTransaction POST {'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'} 2 1",
      "fail 'Could not connect to host'",
      "tran '.transaction' 1 @fail",
      "done",
      "data transactionBytes=$1",
      "curl ?requestType=broadcastTransaction&chain=$chain POST {'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'} 2 1",
      "fail 'Could not connect to host'",
      "tran '.fullHash' 1 @fail",
      "done",
      "@fail",
      "logs 2,'module nrs-api: bad RPC response, retrying request...'",
      "wait 1500",
      "loop @retryLoop 'retries' '<5' '1'",
      "fail 'Error: $symbol network not responding. Cannot push transaction!'"
    ],
    "reformatTx" : [
      "tran .value 2 1",
      "fail 'Failed reformatting transaction.'",
      "with reformatFee [data,'${.feeNQT}'] [atom]",
      "with reformatAmount [data,'${.amountNQT}'] [atom]",
      "tran { id:'=.fullHash|.transaction|unknown', timestamp:'.timestamp', amount:'$reformatAmount', symbol:'$symbol', fee:'$reformatFee', 'fee-symbol':'${fee-symbol}', source:'.senderRS', target:'.recipientRS', confirmed:'.confirmations' } @tranSuccess @tranFail",
      "@tranSuccess",
      "done",
      "@tranFail",
      "fail 'Could not parse history'"
    ],
    "getHistory" : [
      "poke count $2 12",
      "poke offset $3 0",
      "data $symbol",
      "flow {nxt:1, burst:1} 3",
      "data '?requestType=getBlockchainTransactions&account=$1&firstIndex=$offset&lastIndex=$until'",
      "jump 2",
      "data '?requestType=getBlockchainTransactions&account=$1&chain=$chain&firstIndex=$offset&lastIndex=$until'",
      "with until [math,'$offset+$count']",
      "curl $ {'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'} 2 1",
      "fail 'Could not connect to host'",
      "tran '.transactions' 2 1",
      "fail 'Bad response from NRS node!'",
      "sort desc '.timestamp'",
      "poke txData",
      "data $symbol",
      "peek txData",
      "done"
    ],
    "transactionData" : [
      "data $symbol",
      "splt .",
      "pick 0",
      "flow {nxt:1, burst:1} 3",
      "data '?requestType=getTransaction&transaction=$1'",
      "jump 2",
      "data '?requestType=getTransaction&chain=$chain&fullHash=$1'",
      "curl $ {'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'} 2 1",
      "fail 'Could not connect to host'",
      "have '.confirmations' 2 1",
      "fail 'Transaction does not exist!'",
      "# withMessage is true to retrieve only transactions having a message attachment, either non-encrypted or decryptable by the account (optional)"
    ],
    "getTransaction" : [
      "data $symbol",
      "find . @token 1",
      "call mainTransaction/$1",
      "done",
      "@token",
      "call tokenTransaction/$1"
    ],
    "mainTransaction" : [
      "call 'transactionData/$1'",
      "with reformatAmount [data,'${.amountNQT}'] [atom]",
      "with reformatFee [data,'${.feeNQT}'] [atom]",
      "with sender [data,'${.senderRS}'] [flow,'undefined',1,2] [data,'${.sender}'] [done]",
      "with recipient [data,'${.recipientRS}'] [flow,'undefined',1,2] [data,'${.recipient}'] [done]",
      "with .timestamp math +$genesisBlockTime",
      "tran { id:'$1', timestamp:'.timestamp', height:'.height', amount:'$reformatAmount', symbol:'$symbol', fee:'$reformatFee', 'fee-symbol':'${fee-symbol}', source:'$sender', target:'$recipient', confirmed:'.confirmations' } 2 1",
      "fail 'Could not read transaction!'",
      "done"
    ],

    "tokenTransaction" : [
      "call 'transactionData/$1'",
      "poke transaction",
      "tran .attachment.asset",
      "flow {'$contract':2} 1",
      "fail 'Not a transaction for this token asset.'",
      "peek transaction",
      "with reformatAmount [data,'${.attachment.quantityQNT}'] [atom]",
      "with reformatFee [data,'${.feeNQT}'] [atom]",
      "with sender [data,'${.senderRS}'] [flow,'undefined',1,2] [data,'${.sender}'] [done]",
      "with recipient [data,'${.recipientRS}'] [flow,'undefined',1,2] [data,'${.recipient}'] [done]",
      "with .timestamp math +$genesisBlockTime",
      "tran { id:'$1', timestamp:'.timestamp', height:'.height', amount:'$reformatAmount', symbol:'$symbol', fee:'$reformatFee', 'fee-symbol':'${fee-symbol}', source:'$sender', target:'$recipient', confirmed:'.confirmations' } 2 1",
      "fail 'Could not read transaction!'",
      "done"
    ],

    "attachment" : [
      "call 'transactionData/$1'",
      "tran '.attachment' 2 1",
      "fail 'Could not read transaction!'",
      "done"
    ],
    "message" : [
      "call 'attachment/$1'",
      "tran .message 2 1",
      "done ''",
      "code hex utf8",
      "done"
    ],
    "sample" : [
      "done {address:'NXT-4RU9-TNCT-F3MU-8952K',transaction:'13821793329980543744',publicKey:'32f5fa059b39fae92e41fee6606c5afa4db80d426532fa94f50415c062794c4b'}"
    ]
  }
}
