{
  "engine":"testquartz",
  "name":"Quartz Testing Engine",
  "module":"quartz",
  "cache":1000,
  "throttle":10,
  "OK":"OK",
  "NOT_OK":"NOT_OK",
  "quartz":{
    "case" : [
      "data abc123",
      "case upper",
      "flow ABC123 1 2",
      "done $OK",
      "fail $NOT_OK:$0:$"
    ],
    "code" : [
      "data woot",
      "code utf-8 bin",
      "flow '1110111011011110110111101110100' 1 2",
      "done $OK",
      "fail $NOT_OK:$0:$"
    ],
    "date" : [
      "date now",
      "data '$'",
      "head 2",
      "flow '15' 1 2",
      "done $OK",
      "fail $NOT_OK:$0:$"
    ],
    "drop" : [
      "data 'abc'",
      "drop 1",
      "flow 'bc' 1 2",
      "done $OK",
      "fail $NOT_OK:$0:$"
    ],
    "excl" : [
      "data gloves",
      "excl [g,s]",
      "flow 'love' 1 2",
      "done $OK",
      "fail $NOT_OK:$0:$"
    ],
     "excl2" : [
      "data [g,l,o,v,e,s]",
       "excl [g,s]",
       "jstr",
      "flow '[\"l\",\"o\",\"v\",\"e\"]' 1 2",
      "done $OK",
      "fail $NOT_OK:$0:$"
    ],
    "filt" : [
      "data helloworld",
      "filt [o,d]",
      "flow 'ood' 1 2",
      "done $OK",
      "fail $NOT_OK:$0:$"
    ],
    "find" : [
      "data [{id:1,test:2},{id:3,test:4},{id:5,test:6}]",
      "find {id:5}",
      "data ${[0].test}",
      "flow 6 1 2",
      "done $OK",
      "fail $NOT_OK:$0:$"
    ],
    "fuse" : [
      "data appel!",
      "fuse taart 5",
      "flow 'appeltaart!' 1 2",
      "done $OK",
      "fail $NOT_OK:$0:$"
    ],
    "head" : [
      "data appeltaart",
      "head 5",
      "flow 'appel' 1 2",
      "done $OK",
      "fail $NOT_OK:$0:$"
    ],

    "jpar" : [
      "data '{\"key\":\"value\"}'",
      "jpar 1 4",
      "data ${.key}",
      "flow value 1 2",
      "done $OK",
      "fail $NOT_OK:$0:$"
    ],
     "jpar2" : [
      "data 'broken JSON key:value}'",
      "jpar 2 1",
      "done $OK",
      "fail $NOT_OK:$0:$"
     ],
     "jstr" : [
      "data {key:value,array:[1,2,3]}",
      "jstr",
      "flow '{\"key\":\"value\",\"array\":[1,2,3]}' 1 2",
      "done $OK",
      "fail $NOT_OK:$0:$"
     ],
    "many" : [
      "data abcdefaba",
      "many 2",
      "flow 'aaa' 1 2",
      "done $OK",
      "fail $NOT_OK:$0:$"
    ],
    "pick" : [
      "data abcdef",
      "pick 2",
      "flow c 1 2",
      "done $OK",
      "fail $NOT_OK:$0:$"
    ],
    "pick2" : [
      "data abcdef",
      "pick -1",
      "flow f 1 2",
      "done $OK",
      "fail $NOT_OK:$0:$"
    ],
    "pick3" : [
      "data abcdef",
      "pick 1 3",
      "flow bc 1 2",
      "done $OK",
      "fail $NOT_OK:$0:$"
    ],
    "pick4" : [
      "data abcdef",
      "pick [1,3]",
      "flow bd 1 2",
      "done $OK",
      "fail $NOT_OK:$0:$"
    ],
    "pull" : [
      "data abc",
      "push def",
      "flow abcdef 1 2",
      "done $OK",
      "fail $NOT_OK:$0:$"
    ],
    "repl" : [
      "data 'Many apples for you.'",
      "repl [apples,you] [pears,me]",
      "flow 'Many pears for me.' 1 2",
      "done $OK",
      "fail $NOT_OK:$0:$"
    ],
     "size" : [
      "data '1234'",
      "size",
      "flow 4 1 2",
      "done $OK",
      "fail $NOT_OK:$0:$"
     ],


    "burn" : [
      "burn test",
      "done $OK"
    ],

    "save" : [
      "#wait for the burn to be done",
      "wait 400",
      "save test 123",
      "done $OK"
    ],

    "load" : [
      "#wait for the save to be done",
      "wait 400",
      "load test 1 3",
      "flow '123' 1 2",
      "done $OK",
      "fail $NOT_OK:$0:$"
     ],

    "seek" : [
      "#wait for the save to be done",
      "wait 400",
      "seek test 1 3",
      "done $OK",
      "fail $NOT_OK:$0:$"
     ],



    "fail" : [
      "hook @hook",
      "fail '$NOT_OK:$0:$'",
      "@hook",
      "done '$OK'"
    ],
    "data" : [
      "data '$OK'",
      "done"
    ],

    "test" : [
      "qrtz",
      "excl [test,subtest]",
      "each subtest",
      "excl $OK",
      "size",
      "flow 0 1 2",
      "done $OK",
      "fail $NOT_OK:$0:$"
    ],

    "subtest":[
      "hook @fail",
      "#logs '${.value}'",
      "call '${.value}'",
      "done $OK",
      "@fail",
      "done $NOT_OK::$0:$"
    ]


  },
  "router":{
    "_hidden" : true,
    "_ellipsis":true
  }
}
