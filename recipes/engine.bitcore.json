{
  "engine":"bitcore",
  "name":"Bitcore HTTP(S) engine",
  "module":"quartz",
  "cache":1000,
  "import": "transaction-history",
  "apiProvidesFullTx": false,
  "throttle":1,
  "timeout":24000,
  "longTimeout":60000,
  "shortTimeout":15000,
  "factor":8,
  "fee":0,
  "documentation" : "https://github.com/bitpay/bitcore/blob/master/packages/bitcore-node/docs/api-documentation.md",
  "feePerByte":0,
  "confirmsRequired":6,
  "utxo_unspent_prefix":"76a914",
  "utxo_unspent_suffix":"88ac",
  "trimAddrHexL":"2",
  "trimAddrHexR":"8",
  "cron":600,
  "quartz":{
    "balance/address" : [
      "time $timeout",
      "curl /address/$address/balance 2 1",
      "fail 'Connection to host failed'",
      "tran {confirmed:'.balance',unconfirmed:'.unconfirmed'} 2 1",
      "fail 'Result from host invalid'",
      "math '${.confirmed}+${.unconfirmed}'",
      "atom"
    ],
    "unspent/source/amount/target/publicKey/message" : [
      "data $2",
      "void 1 3",
      "call unspentAll/$source",
      "done",
      "poke inputval '$amount' '1000000000000'",
      "with inputval atom 1",
      "time $timeout",
      "curl /address/$source/?unspent=true 2 1 ",
      "fail 'Could not connect to host'",
      "tran []{script:.scriptPubKey,amount:=atom(.amount,true)|.satoshis,txid:.txid,txn:.vout}",
      "sort '.amount'",
      "scan 'cnt<($inputval+val.amount)' '+val.amount'",
      "poke 'selected'",
      "tran '[].amount' 2 1",
      "data []",
      "math '+'",
      "with inputval [flow,'100000000000000000000',1,2] [done,'$'] [done]",
      "math '-$inputval'",
      "ship 2 2 1",
      "data 0",
      "done {unspents:$selected,change:'$'}"
    ],
    "unspentAll/source" : [
      "data '1000000000000'",
      "poke inputval",
      "time $timeout",
      "curl /address/$source/?unspent=true 2 1",
      "fail 'Could not connect to host'",
      "tran []{script:.script,amount:=atom(.value,true),txid:._id} 2 1",
      "fail 'Could not parse unspents'",
      "poke 'selected'",
      "tran '[].amount' 2 1",
      "data []",
      "math '+'",
      "with inputval [flow,'100000000000000000000',1,2] [done,'$'] [done]",
      "ship 2 2 1",
      "data 0",
      "done {unspents:$selected,change:'$'}"
    ],
    "push/transaction" : [
      "time $timeout",
      "data {'rawtx':'$transaction'}",
      "curl /tx/send POST {Accept:'application/json, text/plain, */*',Content-Type:'application/json;charset=utf-8',DNT:1,Connection:'keep-alive'} {timeout:$shortTimeout} @curlSucces @curlFail",
      "@curlFail",
      "fail 'Could not connect to host'",
      "@curlSucces",
      "tran '.txid' @succes @noId",
      "@noId",
      "tran '.error' @error @badTxRes",
      "@error",
      "fail '$'",
      "@badTxRes",
      "warn",
      "fail 'Bad transaction result: $'",
      "@succes",
      "tran .result 1 1",
      "done"
    ],
    "transactionData/txId" : [
      "time $timeout",
      "curl /tx/$txId/coins GET 1 @fail",
      "tran {source: .inputs[].address,target: .outputs[].address}",
      "with .source [uniq] [join,',']",
      "with .target [uniq] [join,',']",
      "poke sourceAndTarget",
      "curl /tx/$txId GET 1 @fail",
      "with .source peek sourceAndTarget.source",
      "with .target peek sourceAndTarget.target",
      "done",
      "@fail",
      "fail 'Could not connect to host'"
    ],
    "reformatTx" : [
      "tran .value 2 1",
      "fail 'Could not parse transaction'",
      "tran { id:._id, timestamp:.blockTimeNormalized, amount: '.value', symbol:'$symbol', fee:.fee, 'fee-symbol':'$symbol', source:.source, target:.target, confirmed:.confirmations } 1 1 "
    ],
    "getTransaction/txId" : [
      "time $timeout",
      "call transactionData/$txId",
      "tran {value: $}",
      "call reformatTx",
      "done"
    ],
    "attachment/txId" : [
      "time $timeout",
      "call transactionData/$txId",
      "tran .vout 1 @empty",
      "jstr",
      "splt 'OP_RETURN '",
      "pick 1",
      "splt '\"'",
      "tran '[0]' 2 @empty",
      "@empty",
      "data null",
      "done"
    ],
    "message/txId" : [
      "time $timeout",
      "call attachment/$txId",
      "data '$'",
      "flow 'null' 1 2",
      "done ''",
      "code hex utf8",
      "done"
    ],
    "getHistory/address/count=12/offset=0" : [
      "time $longTimeout",
      "with countTo [math,'$count+$offset']",
      "curl /address/$address/txs?limit=$countTo 2 1",
      "fail 'Could not connect to host'",
      "drop $offset",
      "tran []._id",
      "done"
    ],

    "fee/message" : [
      "poke opreturnFee 0",
      "data $message",
      "void @finalize 1",
      "data '$message'",
      "ship 2 2 2 1",
      "size",
      "math '$*$feePerByte'",
      "poke opreturnFee",
      "@finalize",
      "peek local::fee $fee",
      "math '$+$opreturnFee'",
      "flow 'null' 1 2",
      "data '$fee'",
      "@feeDone"
    ],
    "sample" : [
      "done {address:'1F1tAaz5x1HUXrCNLbtMDqcw6o5GNn4xqX',transaction:'2c0832c153cf33327dae0e95a3bc39f4b02ae887725a32c07b1be47a2faffc55'}"
    ],
    "cron" : [
      "data '$symbol'",
      "flow 'undefined' 2 1",
      "call 'getFee'",
      "done"
    ],
    "getFee" : [
      "time $timeout",
      "curl /fee/22 2 1",
      "fail 'Could not connect to host'",
      "tran '.feerate' 2 1",
      "done",
      "poke local::fee",
      "math '/100'",
      "poke local::feePerByte",
      "done"
    ]
  }
}
