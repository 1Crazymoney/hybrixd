{
  "engine":"storage",
  "name":"Storage engine module",
  "module":"storage",
  "cron" : 300,
  "quartz"  : {
    "get":[
      "data {key:'$1'}",
      "func 'load'",
      "mime 'file:data'",
      "file",
      "done"
    ],
    "load":[
      "data {key:'$1'}",
      "func 'load'",
      "mime 'file:data'",
      "file",
      "done"
    ],
    "set":[
      "test $ @dataPost @dataGet",
      "@dataPost",
      "data {key:'$1',value:'$'}",
      "jump 2",
      "@dataGet",
      "data {key:'$1',value:'$2'}",
      "func 'save'",
      "done"
    ],
    "save":[
      "test $ @dataPost @dataGet",
      "@dataPost",
      "data {key:'$1',value:'$'}",
      "jump 2",
      "@dataGet",
      "data {key:'$1',value:'$2'}",
      "func 'save'",
      "done"
    ],
    "del":[
      "fail 'Deleting data from node storage is not supported!'"
    ],
    "burn":[
      "fail 'Deleting data from node storage is not supported!'"
    ]
  },
  "router" : {
    "_help" : "Control the decentralized storage engine.",
    "size":{
      "_this" : "Return total size of local storage."
    },
    "seek":{
      "_help" : "Check if a storage key exists.",
      "_ref" : {
        "_list" : "storage_id",
        "_this" : "Specify the ID key to check if it exists."
      }
    },
    "sync":{
      "_help" : "Add storage key to sync list.",
      "_ref" : {
        "_list" : "storage_id",
        "_this" : "Specify the ID key to add to the randomized synchronization list."
      }
    },
    "pull":{
      "_help" : "Retrieve the sync list.",
      "_this" : "The list contains a randomized key list of recently created or updated storage items."
    },
    "seek":{
      "_help" : "Check if a storage key exists.",
      "_ref" : {
        "_list" : "storage_id",
        "_this" : "Specify the ID key too check if it exists."
      }
    },
    "load":{
      "_help" : "Load data from storage.",
      "_ref" : {
        "_list" : "storage_id",
        "_this" : "Specify the ID key to get storage from."
      }
    },
    "get":{"_alias":"load"},
    "save":{
      "_help" : "Save data to storage.",
      "_ref" : {
        "_list" : "storage_id",
        "_this" : "Specify the ID key to save storage to.",
        "_ref" : {
          "_list" : "data",
          "_this" : "Specify the data string value to be saved."
        }
      }
    },
    "set":{"_alias":"save"},
    "burn":{
      "_access" : "root",
      "_help" : "Delete data from storage.",
      "_ref" : {
        "_list" : "storage_id",
        "_this" : "Specify the ID key to delete the storage object."
      }
    },
    "del":{"_alias":"burn"},
    "work":{
      "_help" : "Provide proof-of-work for long term storage.",
      "_ref" : {
        "_list" : "key",
        "_help" : "Specify the ID key to provide proof for.",
        "_ref" : {
          "_list" : "proof",
          "_this" : "Specify a proof string that solves the puzzle."
        }
      }
    },
    "pow":{"_alias":"work"},
    "meta":{
      "_help" : "Get metadata about a storage object.",
      "_ref" : {
        "_list" : "storage_id",
        "_this" : "Specify the ID key to get metadata for."
      }
    }
  }
}
