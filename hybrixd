#!/bin/sh
OLDPATH=$PATH

SCRIPTDIR="`dirname \"$0\"`"
NODE="`cd \"$SCRIPTDIR\" && pwd`"

WHEREAMI=`pwd`

export PATH=$NODE/node_binaries/bin:"$PATH"
NODEINST=`which node`

startHybrixd(){
    cd "$NODE/lib"
    mkdir -p "$NODE/var/log"
    node hybrixd.js 2>&1 | tee -a "$NODE/var/log/hybrixd.log"

    if [ -f "$NODE/var/onstop" ]; then
        ON_STOP_ACTION=$(cat "$NODE/var/onstop")
        if [ "$ON_STOP_ACTION" = "restart" ]; then
            echo "[i] restarting hybrixd..."
            sleep 1;
            startHybrixd
        elif [ "$ON_STOP_ACTION" = "update" ]; then
            sh "$NODE/scripts/npm/update.sh"
            startHybrixd
        else
            echo "[!] Unsupported onstop action."
            echo "[i] stopped hybrixd"
        fi
        rm -rf "$NODE/var/onstop" || true;
    else
        echo "[i] stopped hybrixd"
    fi;
}

if [ "$1" = "" ]; then
    echo "[i] starting hybrixd..."
    NODE_VERSION=$($NODEINST --version)
    NODE_VERSION_MAJOR="`echo $NODE_VERSION | cut -d'.' -f1`"
    NODE_VERSION_MINOR="`echo $NODE_VERSION | cut -d'.' -f2`"

    if [ "$NODE_VERSION_MAJOR" != "v12" ] || [ $NODE_VERSION_MINOR -lt 13 ]; then
        echo "[!] warning: hybrixd expects Node v12.13.0 or higher (found node $NODEINST @ $NODE_VERSION)"
        read -p "[?] Do you wish to continue? [y/N] " CONFIRM
        if [ "$CONFIRM" != "y" ]; then
            cd "$WHEREAMI"
            export "PATH=$OLDPATH"
            echo "[i] Stopped hybrixd."
            exit 0
        fi
    else
        echo "[i] using node executable $NODEINST @ $NODE_VERSION "
    fi

    startHybrixd

elif [ "$1" = "start" ] || [ "$1" = "/c/start" ] || [ "$1" = "/command/start" ]; then
    ./hybrixd.start
elif [ "$1" = "version" ]; then
    npm version patch
elif [ "$1" = "stop" ] || [ "$1" = "restart" ] || [ "$1" = "update" ] || [ "$1" = "reload" ]; then
    cd "$NODE/lib"
    node hcmd.js "/command/$1"
else
    cd "$NODE/lib"
    node hcmd.js $@
fi

cd "$WHEREAMI"
export PATH="$OLDPATH"
